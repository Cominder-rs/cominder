apiVersion: apps/v1
kind: Deployment
metadata:
  name: $app_name
  labels:
    app: $app_name
  namespace: civilization
  annotations:
    mode: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: $app_name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: proxy-port
        app: $app_name
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      imagePullSecrets:
        - name: dockerhub-cred
      containers:
        - image: docker.io/vaider/civilization:users_service
          name: $app_name
          imagePullPolicy: Always
          ports:
          - containerPort: 80
            name: port-80
          volumeMounts:
            - mountPath: /cominder
              name: project-volume
          env:
            - name: APP_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          # lifecycle:
          #   preStop:
          #     exec:
          #       command: ["/bin/sh", "-c", "pkill --signal SIGTERM $app_name"]      
      volumes:
        - name: project-volume
          hostPath:
            path: $HOME/cominder

---
apiVersion: v1
kind: Service
metadata:
  name: $app_name-service
  namespace: civilization
spec:
  selector: 
    app: $app_name
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $app_name-ingress
  namespace: civilization
  annotations:
    kubernetes.io/ingress.class: haproxy
spec:
  rules:
  - host: $app_name.constellation-project.ru
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: $app_name-service
            port:
              number: 80