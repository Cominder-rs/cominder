[workspace]

members = [
    "services/users",
    "services/users/errors",
    "services/users/migrations",
    "services/users/entities",
    "services/users/proto", 
    
    "civilization",
    "civilization/scopes_macro",

    "civilization/beijing",

    "civilization/moscow",
    "civilization/moscow/migrations",
    "services/frontend",
    "civilization/from_str_macro",

    "third-party/tonic-web-wasm-client"
]

resolver = "2"

[workspace.dependencies]

jsonwebtoken = "8.3"
once_cell = "1.17"
tokio = {version = "1.27", features = ["full"] }
tokio-stream = { version = "0.1", features = ["full"] }
tower-http = { version = "0.4", features = ["trace", "cors"] }
http = "0.2"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
dotenvy = "0.15"
sea-orm = { version = "0.11", features = ["runtime-tokio-rustls", "serde_json", "macros", "sqlx-postgres", "time"] }
serde = "1"
serde_json = "1"
validator = { version = "0.16", features = ["phone", "derive"]}
rand = "0.8"
time = { version = "0.3", features = ["serde-well-known", "wasm-bindgen"] }
uuid = { version = "1.1", features = ["v4", "fast-rng"] }
tonic = "0.9"
prost = "0.11"
tonic-build = "0.9"
tonic-web = "0.9"
lazy_static = "1.4"
hyper = "0.14"
futures = "0.3"
tower = "0.4"
protobuf-src = "1.1"
cfg-if = "1"
derive_more = "0.99"
fancy-regex = "0.11"
civilization = { path = "civilization" }
beijing = { path = "civilization/beijing" }
users_entities = { path = "services/users/entities" }
users_errors = { path = "services/users/errors" }
users_proto = { path = "services/users/proto"}
jwt = { path = "civilization/jwt" }
#front-deps
wasm-bindgen-futures = "0.4"
serde-wasm-bindgen = { version = "0.4" }
gloo-console = "0.2"
wasm-bindgen = "0.2"
leptos = { version = "0.3", features = ["csr"]}
leptos_meta = { version = "0.3", features = ["csr"]}
leptos_router = {version = "0.3", features = ["csr"]}
console_error_panic_hook = "0.1"
tonic-web-wasm-client = { version = "0.4" }
js-sys = "0.3"
gloo-net = "0.2.6"
dotenv = "0.15"
from_str_macro = { path = "civilization/from_str_macro" }